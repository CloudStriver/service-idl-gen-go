// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: filecenter.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_Type_folder  Type = 0
	Type_Type_audio   Type = 1
	Type_Type_video   Type = 2
	Type_Type_photo   Type = 3
	Type_Type_word    Type = 4
	Type_Type_ppt     Type = 5
	Type_Type_zip     Type = 6
	Type_Type_excel   Type = 7
	Type_Type_pdf     Type = 8
	Type_Type_unknown Type = 9
	Type_Type_file    Type = 10
	Type_Type_code    Type = 11
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "Type_folder",
		1:  "Type_audio",
		2:  "Type_video",
		3:  "Type_photo",
		4:  "Type_word",
		5:  "Type_ppt",
		6:  "Type_zip",
		7:  "Type_excel",
		8:  "Type_pdf",
		9:  "Type_unknown",
		10: "Type_file",
		11: "Type_code",
	}
	Type_value = map[string]int32{
		"Type_folder":  0,
		"Type_audio":   1,
		"Type_video":   2,
		"Type_photo":   3,
		"Type_word":    4,
		"Type_ppt":     5,
		"Type_zip":     6,
		"Type_excel":   7,
		"Type_pdf":     8,
		"Type_unknown": 9,
		"Type_file":    10,
		"Type_code":    11,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_filecenter_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_filecenter_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{0}
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId     string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type       Type   `protobuf:"varint,3,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	Path       string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	UserId     string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	FatherId   string `protobuf:"bytes,6,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	Size       int64  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Md5        string `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`
	UpdateTime int64  `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Type_folder
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *File) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *File) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type PublicFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId      string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        Type   `protobuf:"varint,3,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	Path        string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	UserId      string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	FatherId    string `protobuf:"bytes,6,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	Size        int64  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Md5         string `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`
	UpdateTime  int64  `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PublicFile) Reset() {
	*x = PublicFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicFile) ProtoMessage() {}

func (x *PublicFile) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicFile.ProtoReflect.Descriptor instead.
func (*PublicFile) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{1}
}

func (x *PublicFile) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *PublicFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicFile) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Type_folder
}

func (x *PublicFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PublicFile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PublicFile) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *PublicFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PublicFile) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *PublicFile) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *PublicFile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CosInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId     string `protobuf:"bytes,1,opt,name=secretId,proto3" json:"secretId,omitempty"`
	SecretKey    string `protobuf:"bytes,2,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	BucketName   string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *CosInfo) Reset() {
	*x = CosInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosInfo) ProtoMessage() {}

func (x *CosInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosInfo.ProtoReflect.Descriptor instead.
func (*CosInfo) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{2}
}

func (x *CosInfo) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *CosInfo) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *CosInfo) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *CosInfo) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type GetCosInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetCosInfoReq) Reset() {
	*x = GetCosInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosInfoReq) ProtoMessage() {}

func (x *GetCosInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosInfoReq.ProtoReflect.Descriptor instead.
func (*GetCosInfoReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{3}
}

func (x *GetCosInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCosInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cos   *CosInfo `protobuf:"bytes,1,opt,name=cos,proto3" json:"cos,omitempty"`
	Error string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetCosInfoResp) Reset() {
	*x = GetCosInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosInfoResp) ProtoMessage() {}

func (x *GetCosInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosInfoResp.ProtoReflect.Descriptor instead.
func (*GetCosInfoResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{4}
}

func (x *GetCosInfoResp) GetCos() *CosInfo {
	if x != nil {
		return x.Cos
	}
	return nil
}

func (x *GetCosInfoResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileByMd5Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *GetFileByMd5Req) Reset() {
	*x = GetFileByMd5Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByMd5Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByMd5Req) ProtoMessage() {}

func (x *GetFileByMd5Req) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByMd5Req.ProtoReflect.Descriptor instead.
func (*GetFileByMd5Req) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{5}
}

func (x *GetFileByMd5Req) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type GetFileByMd5Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileByMd5Resp) Reset() {
	*x = GetFileByMd5Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByMd5Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByMd5Resp) ProtoMessage() {}

func (x *GetFileByMd5Resp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByMd5Resp.ProtoReflect.Descriptor instead.
func (*GetFileByMd5Resp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{6}
}

func (x *GetFileByMd5Resp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetFileByMd5Resp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileInfoByFileIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *GetFileInfoByFileIdReq) Reset() {
	*x = GetFileInfoByFileIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdReq) ProtoMessage() {}

func (x *GetFileInfoByFileIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdReq.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{7}
}

func (x *GetFileInfoByFileIdReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type GetFileInfoByFileIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  *File  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileInfoByFileIdResp) Reset() {
	*x = GetFileInfoByFileIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdResp) ProtoMessage() {}

func (x *GetFileInfoByFileIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdResp.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{8}
}

func (x *GetFileInfoByFileIdResp) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *GetFileInfoByFileIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileByFileIdWithUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetFileByFileIdWithUserIdReq) Reset() {
	*x = GetFileByFileIdWithUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByFileIdWithUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByFileIdWithUserIdReq) ProtoMessage() {}

func (x *GetFileByFileIdWithUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByFileIdWithUserIdReq.ProtoReflect.Descriptor instead.
func (*GetFileByFileIdWithUserIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{9}
}

func (x *GetFileByFileIdWithUserIdReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetFileByFileIdWithUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFileByFileIdWithUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  *File  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileByFileIdWithUserIdResp) Reset() {
	*x = GetFileByFileIdWithUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByFileIdWithUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByFileIdWithUserIdResp) ProtoMessage() {}

func (x *GetFileByFileIdWithUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByFileIdWithUserIdResp.ProtoReflect.Descriptor instead.
func (*GetFileByFileIdWithUserIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{10}
}

func (x *GetFileByFileIdWithUserIdResp) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *GetFileByFileIdWithUserIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileInfoByFileIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	UserId  string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetFileInfoByFileIdsReq) Reset() {
	*x = GetFileInfoByFileIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdsReq) ProtoMessage() {}

func (x *GetFileInfoByFileIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdsReq.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdsReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{11}
}

func (x *GetFileInfoByFileIdsReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *GetFileInfoByFileIdsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFileInfoByFileIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileInfoByFileIdsResp) Reset() {
	*x = GetFileInfoByFileIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdsResp) ProtoMessage() {}

func (x *GetFileInfoByFileIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdsResp.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdsResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{12}
}

func (x *GetFileInfoByFileIdsResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFileInfoByFileIdsResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileInfoByFileIdsWithUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	UserId  string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetFileInfoByFileIdsWithUserIdReq) Reset() {
	*x = GetFileInfoByFileIdsWithUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdsWithUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdsWithUserIdReq) ProtoMessage() {}

func (x *GetFileInfoByFileIdsWithUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdsWithUserIdReq.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdsWithUserIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{13}
}

func (x *GetFileInfoByFileIdsWithUserIdReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *GetFileInfoByFileIdsWithUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFileInfoByFileIdsWithUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileInfoByFileIdsWithUserIdResp) Reset() {
	*x = GetFileInfoByFileIdsWithUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoByFileIdsWithUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoByFileIdsWithUserIdResp) ProtoMessage() {}

func (x *GetFileInfoByFileIdsWithUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoByFileIdsWithUserIdResp.ProtoReflect.Descriptor instead.
func (*GetFileInfoByFileIdsWithUserIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{14}
}

func (x *GetFileInfoByFileIdsWithUserIdResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFileInfoByFileIdsWithUserIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFilesByFatherIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
}

func (x *GetFilesByFatherIdReq) Reset() {
	*x = GetFilesByFatherIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesByFatherIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesByFatherIdReq) ProtoMessage() {}

func (x *GetFilesByFatherIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesByFatherIdReq.ProtoReflect.Descriptor instead.
func (*GetFilesByFatherIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{15}
}

func (x *GetFilesByFatherIdReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

type GetFilesByFatherIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFilesByFatherIdResp) Reset() {
	*x = GetFilesByFatherIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesByFatherIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesByFatherIdResp) ProtoMessage() {}

func (x *GetFilesByFatherIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesByFatherIdResp.ProtoReflect.Descriptor instead.
func (*GetFilesByFatherIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{16}
}

func (x *GetFilesByFatherIdResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFilesByFatherIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFilesByFatherIdWithUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetFilesByFatherIdWithUserIdReq) Reset() {
	*x = GetFilesByFatherIdWithUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesByFatherIdWithUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesByFatherIdWithUserIdReq) ProtoMessage() {}

func (x *GetFilesByFatherIdWithUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesByFatherIdWithUserIdReq.ProtoReflect.Descriptor instead.
func (*GetFilesByFatherIdWithUserIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{17}
}

func (x *GetFilesByFatherIdWithUserIdReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *GetFilesByFatherIdWithUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFilesByFatherIdWithUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFilesByFatherIdWithUserIdResp) Reset() {
	*x = GetFilesByFatherIdWithUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesByFatherIdWithUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesByFatherIdWithUserIdResp) ProtoMessage() {}

func (x *GetFilesByFatherIdWithUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesByFatherIdWithUserIdResp.ProtoReflect.Descriptor instead.
func (*GetFilesByFatherIdWithUserIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{18}
}

func (x *GetFilesByFatherIdWithUserIdResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFilesByFatherIdWithUserIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetAllFileByFatherIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetAllFileByFatherIdReq) Reset() {
	*x = GetAllFileByFatherIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFileByFatherIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFileByFatherIdReq) ProtoMessage() {}

func (x *GetAllFileByFatherIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFileByFatherIdReq.ProtoReflect.Descriptor instead.
func (*GetAllFileByFatherIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{19}
}

func (x *GetAllFileByFatherIdReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *GetAllFileByFatherIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAllFileByFatherIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAllFileByFatherIdResp) Reset() {
	*x = GetAllFileByFatherIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFileByFatherIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFileByFatherIdResp) ProtoMessage() {}

func (x *GetAllFileByFatherIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFileByFatherIdResp.ProtoReflect.Descriptor instead.
func (*GetAllFileByFatherIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllFileByFatherIdResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetAllFileByFatherIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CalFileSizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Size   *int64 `protobuf:"varint,2,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Path   string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Op     bool   `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *CalFileSizeReq) Reset() {
	*x = CalFileSizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalFileSizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalFileSizeReq) ProtoMessage() {}

func (x *CalFileSizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalFileSizeReq.ProtoReflect.Descriptor instead.
func (*CalFileSizeReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{21}
}

func (x *CalFileSizeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CalFileSizeReq) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *CalFileSizeReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CalFileSizeReq) GetOp() bool {
	if x != nil {
		return x.Op
	}
	return false
}

type CalFileSizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalFileSizeResp) Reset() {
	*x = CalFileSizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalFileSizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalFileSizeResp) ProtoMessage() {}

func (x *CalFileSizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalFileSizeResp.ProtoReflect.Descriptor instead.
func (*CalFileSizeResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{22}
}

func (x *CalFileSizeResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFileCountReq) Reset() {
	*x = GetFileCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileCountReq) ProtoMessage() {}

func (x *GetFileCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileCountReq.ProtoReflect.Descriptor instead.
func (*GetFileCountReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{23}
}

type GetFileCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFileCountResp) Reset() {
	*x = GetFileCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileCountResp) ProtoMessage() {}

func (x *GetFileCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileCountResp.ProtoReflect.Descriptor instead.
func (*GetFileCountResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{24}
}

type GetFileTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFileTypeReq) Reset() {
	*x = GetFileTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTypeReq) ProtoMessage() {}

func (x *GetFileTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTypeReq.ProtoReflect.Descriptor instead.
func (*GetFileTypeReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{25}
}

type GetFileTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFileTypeResp) Reset() {
	*x = GetFileTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTypeResp) ProtoMessage() {}

func (x *GetFileTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTypeResp.ProtoReflect.Descriptor instead.
func (*GetFileTypeResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{26}
}

type GetFileInfoInPublicByFileIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *GetFileInfoInPublicByFileIdReq) Reset() {
	*x = GetFileInfoInPublicByFileIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoInPublicByFileIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoInPublicByFileIdReq) ProtoMessage() {}

func (x *GetFileInfoInPublicByFileIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoInPublicByFileIdReq.ProtoReflect.Descriptor instead.
func (*GetFileInfoInPublicByFileIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{27}
}

func (x *GetFileInfoInPublicByFileIdReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type GetFileInfoInPublicByFileIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  *PublicFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Error string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileInfoInPublicByFileIdResp) Reset() {
	*x = GetFileInfoInPublicByFileIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoInPublicByFileIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoInPublicByFileIdResp) ProtoMessage() {}

func (x *GetFileInfoInPublicByFileIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoInPublicByFileIdResp.ProtoReflect.Descriptor instead.
func (*GetFileInfoInPublicByFileIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{28}
}

func (x *GetFileInfoInPublicByFileIdResp) GetFile() *PublicFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *GetFileInfoInPublicByFileIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPublicFileByFileIdWithUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetPublicFileByFileIdWithUserIdReq) Reset() {
	*x = GetPublicFileByFileIdWithUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFileByFileIdWithUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFileByFileIdWithUserIdReq) ProtoMessage() {}

func (x *GetPublicFileByFileIdWithUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFileByFileIdWithUserIdReq.ProtoReflect.Descriptor instead.
func (*GetPublicFileByFileIdWithUserIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{29}
}

func (x *GetPublicFileByFileIdWithUserIdReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetPublicFileByFileIdWithUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPublicFileByFileIdWithUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  *PublicFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Error string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetPublicFileByFileIdWithUserIdResp) Reset() {
	*x = GetPublicFileByFileIdWithUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFileByFileIdWithUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFileByFileIdWithUserIdResp) ProtoMessage() {}

func (x *GetPublicFileByFileIdWithUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFileByFileIdWithUserIdResp.ProtoReflect.Descriptor instead.
func (*GetPublicFileByFileIdWithUserIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{30}
}

func (x *GetPublicFileByFileIdWithUserIdResp) GetFile() *PublicFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *GetPublicFileByFileIdWithUserIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPublicByFileIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []string `protobuf:"bytes,1,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	Error   string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetPublicByFileIdsReq) Reset() {
	*x = GetPublicByFileIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicByFileIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicByFileIdsReq) ProtoMessage() {}

func (x *GetPublicByFileIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicByFileIdsReq.ProtoReflect.Descriptor instead.
func (*GetPublicByFileIdsReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{31}
}

func (x *GetPublicByFileIdsReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *GetPublicByFileIdsReq) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPublicByFileIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIds []*PublicFile `protobuf:"bytes,1,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	Error   string        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetPublicByFileIdsResp) Reset() {
	*x = GetPublicByFileIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicByFileIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicByFileIdsResp) ProtoMessage() {}

func (x *GetPublicByFileIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicByFileIdsResp.ProtoReflect.Descriptor instead.
func (*GetPublicByFileIdsResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{32}
}

func (x *GetPublicByFileIdsResp) GetFileIds() []*PublicFile {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *GetPublicByFileIdsResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CalPublicFileSizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Size   *int64 `protobuf:"varint,2,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Path   string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Op     bool   `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *CalPublicFileSizeReq) Reset() {
	*x = CalPublicFileSizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalPublicFileSizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalPublicFileSizeReq) ProtoMessage() {}

func (x *CalPublicFileSizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalPublicFileSizeReq.ProtoReflect.Descriptor instead.
func (*CalPublicFileSizeReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{33}
}

func (x *CalPublicFileSizeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CalPublicFileSizeReq) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *CalPublicFileSizeReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CalPublicFileSizeReq) GetOp() bool {
	if x != nil {
		return x.Op
	}
	return false
}

type CalPublicFileSizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalPublicFileSizeResp) Reset() {
	*x = CalPublicFileSizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalPublicFileSizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalPublicFileSizeResp) ProtoMessage() {}

func (x *CalPublicFileSizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalPublicFileSizeResp.ProtoReflect.Descriptor instead.
func (*CalPublicFileSizeResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{34}
}

func (x *CalPublicFileSizeResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPublicFilesByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetPublicFilesByUserIdReq) Reset() {
	*x = GetPublicFilesByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFilesByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFilesByUserIdReq) ProtoMessage() {}

func (x *GetPublicFilesByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFilesByUserIdReq.ProtoReflect.Descriptor instead.
func (*GetPublicFilesByUserIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{35}
}

func (x *GetPublicFilesByUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPublicFilesByUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*PublicFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetPublicFilesByUserIdResp) Reset() {
	*x = GetPublicFilesByUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFilesByUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFilesByUserIdResp) ProtoMessage() {}

func (x *GetPublicFilesByUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFilesByUserIdResp.ProtoReflect.Descriptor instead.
func (*GetPublicFilesByUserIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{36}
}

func (x *GetPublicFilesByUserIdResp) GetFiles() []*PublicFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetPublicFilesByFatherIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
}

func (x *GetPublicFilesByFatherIdReq) Reset() {
	*x = GetPublicFilesByFatherIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFilesByFatherIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFilesByFatherIdReq) ProtoMessage() {}

func (x *GetPublicFilesByFatherIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFilesByFatherIdReq.ProtoReflect.Descriptor instead.
func (*GetPublicFilesByFatherIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{37}
}

func (x *GetPublicFilesByFatherIdReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

type GetPublicFilesByFatherIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*PublicFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetPublicFilesByFatherIdResp) Reset() {
	*x = GetPublicFilesByFatherIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicFilesByFatherIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicFilesByFatherIdResp) ProtoMessage() {}

func (x *GetPublicFilesByFatherIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicFilesByFatherIdResp.ProtoReflect.Descriptor instead.
func (*GetPublicFilesByFatherIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{38}
}

func (x *GetPublicFilesByFatherIdResp) GetFiles() []*PublicFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetPublicFilesByFatherIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetAllPublicFileByFatherIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
}

func (x *GetAllPublicFileByFatherIdReq) Reset() {
	*x = GetAllPublicFileByFatherIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPublicFileByFatherIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPublicFileByFatherIdReq) ProtoMessage() {}

func (x *GetAllPublicFileByFatherIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPublicFileByFatherIdReq.ProtoReflect.Descriptor instead.
func (*GetAllPublicFileByFatherIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{39}
}

func (x *GetAllPublicFileByFatherIdReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

type GetAllPublicFileByFatherIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*PublicFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAllPublicFileByFatherIdResp) Reset() {
	*x = GetAllPublicFileByFatherIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPublicFileByFatherIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPublicFileByFatherIdResp) ProtoMessage() {}

func (x *GetAllPublicFileByFatherIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPublicFileByFatherIdResp.ProtoReflect.Descriptor instead.
func (*GetAllPublicFileByFatherIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{40}
}

func (x *GetAllPublicFileByFatherIdResp) GetFiles() []*PublicFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetAllPublicFileByFatherIdResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileBySharingCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharingCode string `protobuf:"bytes,1,opt,name=sharingCode,proto3" json:"sharingCode,omitempty"`
}

func (x *GetFileBySharingCodeReq) Reset() {
	*x = GetFileBySharingCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileBySharingCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileBySharingCodeReq) ProtoMessage() {}

func (x *GetFileBySharingCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileBySharingCodeReq.ProtoReflect.Descriptor instead.
func (*GetFileBySharingCodeReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{41}
}

func (x *GetFileBySharingCodeReq) GetSharingCode() string {
	if x != nil {
		return x.SharingCode
	}
	return ""
}

type GetFileBySharingCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFileBySharingCodeResp) Reset() {
	*x = GetFileBySharingCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileBySharingCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileBySharingCodeResp) ProtoMessage() {}

func (x *GetFileBySharingCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileBySharingCodeResp.ProtoReflect.Descriptor instead.
func (*GetFileBySharingCodeResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{42}
}

func (x *GetFileBySharingCodeResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFileBySharingCodeResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteExpiredFilesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredFilesReq) Reset() {
	*x = DeleteExpiredFilesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredFilesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredFilesReq) ProtoMessage() {}

func (x *DeleteExpiredFilesReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredFilesReq.ProtoReflect.Descriptor instead.
func (*DeleteExpiredFilesReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{43}
}

type DeleteExpiredFilesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredFilesResp) Reset() {
	*x = DeleteExpiredFilesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredFilesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredFilesResp) ProtoMessage() {}

func (x *DeleteExpiredFilesResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredFilesResp.ProtoReflect.Descriptor instead.
func (*DeleteExpiredFilesResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{44}
}

type DeleteExpiredShareCodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredShareCodesReq) Reset() {
	*x = DeleteExpiredShareCodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredShareCodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredShareCodesReq) ProtoMessage() {}

func (x *DeleteExpiredShareCodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredShareCodesReq.ProtoReflect.Descriptor instead.
func (*DeleteExpiredShareCodesReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{45}
}

type DeleteExpiredShareCodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredShareCodesResp) Reset() {
	*x = DeleteExpiredShareCodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredShareCodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredShareCodesResp) ProtoMessage() {}

func (x *DeleteExpiredShareCodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredShareCodesResp.ProtoReflect.Descriptor instead.
func (*DeleteExpiredShareCodesResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{46}
}

type UploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File [][]byte `protobuf:"bytes,1,rep,name=file,proto3" json:"file,omitempty"`
	Name []string `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{47}
}

func (x *UploadFileReq) GetFile() [][]byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadFileReq) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type UploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadFileResp) Reset() {
	*x = UploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResp) ProtoMessage() {}

func (x *UploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResp.ProtoReflect.Descriptor instead.
func (*UploadFileResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{48}
}

type AskUploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type     Type   `protobuf:"varint,4,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	Md5      string `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	FatherId string `protobuf:"bytes,6,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	FileId   string `protobuf:"bytes,7,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Ok       bool   `protobuf:"varint,8,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *AskUploadFileReq) Reset() {
	*x = AskUploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskUploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskUploadFileReq) ProtoMessage() {}

func (x *AskUploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskUploadFileReq.ProtoReflect.Descriptor instead.
func (*AskUploadFileReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{49}
}

func (x *AskUploadFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AskUploadFileReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AskUploadFileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AskUploadFileReq) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Type_folder
}

func (x *AskUploadFileReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AskUploadFileReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *AskUploadFileReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AskUploadFileReq) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type AskUploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AskUploadFileResp) Reset() {
	*x = AskUploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskUploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskUploadFileResp) ProtoMessage() {}

func (x *AskUploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskUploadFileResp.ProtoReflect.Descriptor instead.
func (*AskUploadFileResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{50}
}

var File_filecenter_proto protoreflect.FileDescriptor

var file_filecenter_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xde, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x63, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x64, 0x35, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22,
	0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x64, 0x35, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x55,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6e, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x70, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x38, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x23, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x74,
	0x0a, 0x14, 0x43, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x3b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x5c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3b,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x17, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x1d,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a,
	0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x6b,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a, 0xc0, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x70, 0x74, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x7a, 0x69, 0x70, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x70, 0x64, 0x66, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x0b, 0x32, 0xec, 0x0f, 0x0a, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x64, 0x35, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x64, 0x35, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42,
	0x79, 0x4d, 0x64, 0x35, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x66, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11,
	0x43, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41,
	0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x15, 0x41, 0x73, 0x6b,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73,
	0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filecenter_proto_rawDescOnce sync.Once
	file_filecenter_proto_rawDescData = file_filecenter_proto_rawDesc
)

func file_filecenter_proto_rawDescGZIP() []byte {
	file_filecenter_proto_rawDescOnce.Do(func() {
		file_filecenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_filecenter_proto_rawDescData)
	})
	return file_filecenter_proto_rawDescData
}

var file_filecenter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_filecenter_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_filecenter_proto_goTypes = []interface{}{
	(Type)(0),                                   // 0: pb.Type
	(*File)(nil),                                // 1: pb.File
	(*PublicFile)(nil),                          // 2: pb.PublicFile
	(*CosInfo)(nil),                             // 3: pb.CosInfo
	(*GetCosInfoReq)(nil),                       // 4: pb.GetCosInfoReq
	(*GetCosInfoResp)(nil),                      // 5: pb.GetCosInfoResp
	(*GetFileByMd5Req)(nil),                     // 6: pb.GetFileByMd5Req
	(*GetFileByMd5Resp)(nil),                    // 7: pb.GetFileByMd5Resp
	(*GetFileInfoByFileIdReq)(nil),              // 8: pb.GetFileInfoByFileIdReq
	(*GetFileInfoByFileIdResp)(nil),             // 9: pb.GetFileInfoByFileIdResp
	(*GetFileByFileIdWithUserIdReq)(nil),        // 10: pb.GetFileByFileIdWithUserIdReq
	(*GetFileByFileIdWithUserIdResp)(nil),       // 11: pb.GetFileByFileIdWithUserIdResp
	(*GetFileInfoByFileIdsReq)(nil),             // 12: pb.GetFileInfoByFileIdsReq
	(*GetFileInfoByFileIdsResp)(nil),            // 13: pb.GetFileInfoByFileIdsResp
	(*GetFileInfoByFileIdsWithUserIdReq)(nil),   // 14: pb.GetFileInfoByFileIdsWithUserIdReq
	(*GetFileInfoByFileIdsWithUserIdResp)(nil),  // 15: pb.GetFileInfoByFileIdsWithUserIdResp
	(*GetFilesByFatherIdReq)(nil),               // 16: pb.GetFilesByFatherIdReq
	(*GetFilesByFatherIdResp)(nil),              // 17: pb.GetFilesByFatherIdResp
	(*GetFilesByFatherIdWithUserIdReq)(nil),     // 18: pb.GetFilesByFatherIdWithUserIdReq
	(*GetFilesByFatherIdWithUserIdResp)(nil),    // 19: pb.GetFilesByFatherIdWithUserIdResp
	(*GetAllFileByFatherIdReq)(nil),             // 20: pb.GetAllFileByFatherIdReq
	(*GetAllFileByFatherIdResp)(nil),            // 21: pb.GetAllFileByFatherIdResp
	(*CalFileSizeReq)(nil),                      // 22: pb.CalFileSizeReq
	(*CalFileSizeResp)(nil),                     // 23: pb.CalFileSizeResp
	(*GetFileCountReq)(nil),                     // 24: pb.GetFileCountReq
	(*GetFileCountResp)(nil),                    // 25: pb.GetFileCountResp
	(*GetFileTypeReq)(nil),                      // 26: pb.GetFileTypeReq
	(*GetFileTypeResp)(nil),                     // 27: pb.GetFileTypeResp
	(*GetFileInfoInPublicByFileIdReq)(nil),      // 28: pb.GetFileInfoInPublicByFileIdReq
	(*GetFileInfoInPublicByFileIdResp)(nil),     // 29: pb.GetFileInfoInPublicByFileIdResp
	(*GetPublicFileByFileIdWithUserIdReq)(nil),  // 30: pb.GetPublicFileByFileIdWithUserIdReq
	(*GetPublicFileByFileIdWithUserIdResp)(nil), // 31: pb.GetPublicFileByFileIdWithUserIdResp
	(*GetPublicByFileIdsReq)(nil),               // 32: pb.GetPublicByFileIdsReq
	(*GetPublicByFileIdsResp)(nil),              // 33: pb.GetPublicByFileIdsResp
	(*CalPublicFileSizeReq)(nil),                // 34: pb.CalPublicFileSizeReq
	(*CalPublicFileSizeResp)(nil),               // 35: pb.CalPublicFileSizeResp
	(*GetPublicFilesByUserIdReq)(nil),           // 36: pb.GetPublicFilesByUserIdReq
	(*GetPublicFilesByUserIdResp)(nil),          // 37: pb.GetPublicFilesByUserIdResp
	(*GetPublicFilesByFatherIdReq)(nil),         // 38: pb.GetPublicFilesByFatherIdReq
	(*GetPublicFilesByFatherIdResp)(nil),        // 39: pb.GetPublicFilesByFatherIdResp
	(*GetAllPublicFileByFatherIdReq)(nil),       // 40: pb.GetAllPublicFileByFatherIdReq
	(*GetAllPublicFileByFatherIdResp)(nil),      // 41: pb.GetAllPublicFileByFatherIdResp
	(*GetFileBySharingCodeReq)(nil),             // 42: pb.GetFileBySharingCodeReq
	(*GetFileBySharingCodeResp)(nil),            // 43: pb.GetFileBySharingCodeResp
	(*DeleteExpiredFilesReq)(nil),               // 44: pb.DeleteExpiredFilesReq
	(*DeleteExpiredFilesResp)(nil),              // 45: pb.DeleteExpiredFilesResp
	(*DeleteExpiredShareCodesReq)(nil),          // 46: pb.DeleteExpiredShareCodesReq
	(*DeleteExpiredShareCodesResp)(nil),         // 47: pb.DeleteExpiredShareCodesResp
	(*UploadFileReq)(nil),                       // 48: pb.UploadFileReq
	(*UploadFileResp)(nil),                      // 49: pb.UploadFileResp
	(*AskUploadFileReq)(nil),                    // 50: pb.AskUploadFileReq
	(*AskUploadFileResp)(nil),                   // 51: pb.AskUploadFileResp
}
var file_filecenter_proto_depIdxs = []int32{
	0,  // 0: pb.File.type:type_name -> pb.Type
	0,  // 1: pb.PublicFile.type:type_name -> pb.Type
	3,  // 2: pb.GetCosInfoResp.cos:type_name -> pb.CosInfo
	1,  // 3: pb.GetFileInfoByFileIdResp.file:type_name -> pb.File
	1,  // 4: pb.GetFileByFileIdWithUserIdResp.file:type_name -> pb.File
	1,  // 5: pb.GetFileInfoByFileIdsResp.files:type_name -> pb.File
	1,  // 6: pb.GetFileInfoByFileIdsWithUserIdResp.files:type_name -> pb.File
	1,  // 7: pb.GetFilesByFatherIdResp.files:type_name -> pb.File
	1,  // 8: pb.GetFilesByFatherIdWithUserIdResp.files:type_name -> pb.File
	1,  // 9: pb.GetAllFileByFatherIdResp.files:type_name -> pb.File
	2,  // 10: pb.GetFileInfoInPublicByFileIdResp.file:type_name -> pb.PublicFile
	2,  // 11: pb.GetPublicFileByFileIdWithUserIdResp.file:type_name -> pb.PublicFile
	2,  // 12: pb.GetPublicByFileIdsResp.fileIds:type_name -> pb.PublicFile
	2,  // 13: pb.GetPublicFilesByUserIdResp.files:type_name -> pb.PublicFile
	2,  // 14: pb.GetPublicFilesByFatherIdResp.files:type_name -> pb.PublicFile
	2,  // 15: pb.GetAllPublicFileByFatherIdResp.files:type_name -> pb.PublicFile
	1,  // 16: pb.GetFileBySharingCodeResp.files:type_name -> pb.File
	0,  // 17: pb.AskUploadFileReq.type:type_name -> pb.Type
	4,  // 18: pb.filecenter.GetCosInfo:input_type -> pb.GetCosInfoReq
	6,  // 19: pb.filecenter.GetFileByMd5:input_type -> pb.GetFileByMd5Req
	8,  // 20: pb.filecenter.GetFileInfoByFileId:input_type -> pb.GetFileInfoByFileIdReq
	10, // 21: pb.filecenter.GetFileByFileIdWithUserId:input_type -> pb.GetFileByFileIdWithUserIdReq
	12, // 22: pb.filecenter.GetFileInfoByFileIds:input_type -> pb.GetFileInfoByFileIdsReq
	14, // 23: pb.filecenter.GetFileInfoByFileIdsWithUserId:input_type -> pb.GetFileInfoByFileIdsWithUserIdReq
	16, // 24: pb.filecenter.GetFilesByFatherId:input_type -> pb.GetFilesByFatherIdReq
	18, // 25: pb.filecenter.GetFilesByFatherIdWithUserId:input_type -> pb.GetFilesByFatherIdWithUserIdReq
	20, // 26: pb.filecenter.GetAllFileByFatherId:input_type -> pb.GetAllFileByFatherIdReq
	24, // 27: pb.filecenter.GetFileCount:input_type -> pb.GetFileCountReq
	26, // 28: pb.filecenter.GetFileType:input_type -> pb.GetFileTypeReq
	28, // 29: pb.filecenter.GetFileInfoInPublicByFileId:input_type -> pb.GetFileInfoInPublicByFileIdReq
	30, // 30: pb.filecenter.GetPublicFileByFileIdWithUserId:input_type -> pb.GetPublicFileByFileIdWithUserIdReq
	32, // 31: pb.filecenter.GetPublicByFileIds:input_type -> pb.GetPublicByFileIdsReq
	36, // 32: pb.filecenter.GetPublicFilesByUserId:input_type -> pb.GetPublicFilesByUserIdReq
	38, // 33: pb.filecenter.GetPublicFilesByFatherId:input_type -> pb.GetPublicFilesByFatherIdReq
	40, // 34: pb.filecenter.GetAllPublicFileByFatherId:input_type -> pb.GetAllPublicFileByFatherIdReq
	42, // 35: pb.filecenter.GetFileBySharingCode:input_type -> pb.GetFileBySharingCodeReq
	22, // 36: pb.filecenter.CalFileSize:input_type -> pb.CalFileSizeReq
	34, // 37: pb.filecenter.CalPublicFileSize:input_type -> pb.CalPublicFileSizeReq
	48, // 38: pb.filecenter.UploadFile:input_type -> pb.UploadFileReq
	50, // 39: pb.filecenter.AskUploadFile:input_type -> pb.AskUploadFileReq
	50, // 40: pb.filecenter.AskUploadFileRollback:input_type -> pb.AskUploadFileReq
	44, // 41: pb.filecenter.DeleteExpiredFiles:input_type -> pb.DeleteExpiredFilesReq
	46, // 42: pb.filecenter.DeleteExpiredShareCodes:input_type -> pb.DeleteExpiredShareCodesReq
	5,  // 43: pb.filecenter.GetCosInfo:output_type -> pb.GetCosInfoResp
	7,  // 44: pb.filecenter.GetFileByMd5:output_type -> pb.GetFileByMd5Resp
	9,  // 45: pb.filecenter.GetFileInfoByFileId:output_type -> pb.GetFileInfoByFileIdResp
	11, // 46: pb.filecenter.GetFileByFileIdWithUserId:output_type -> pb.GetFileByFileIdWithUserIdResp
	13, // 47: pb.filecenter.GetFileInfoByFileIds:output_type -> pb.GetFileInfoByFileIdsResp
	15, // 48: pb.filecenter.GetFileInfoByFileIdsWithUserId:output_type -> pb.GetFileInfoByFileIdsWithUserIdResp
	17, // 49: pb.filecenter.GetFilesByFatherId:output_type -> pb.GetFilesByFatherIdResp
	19, // 50: pb.filecenter.GetFilesByFatherIdWithUserId:output_type -> pb.GetFilesByFatherIdWithUserIdResp
	21, // 51: pb.filecenter.GetAllFileByFatherId:output_type -> pb.GetAllFileByFatherIdResp
	25, // 52: pb.filecenter.GetFileCount:output_type -> pb.GetFileCountResp
	26, // 53: pb.filecenter.GetFileType:output_type -> pb.GetFileTypeReq
	29, // 54: pb.filecenter.GetFileInfoInPublicByFileId:output_type -> pb.GetFileInfoInPublicByFileIdResp
	31, // 55: pb.filecenter.GetPublicFileByFileIdWithUserId:output_type -> pb.GetPublicFileByFileIdWithUserIdResp
	33, // 56: pb.filecenter.GetPublicByFileIds:output_type -> pb.GetPublicByFileIdsResp
	37, // 57: pb.filecenter.GetPublicFilesByUserId:output_type -> pb.GetPublicFilesByUserIdResp
	39, // 58: pb.filecenter.GetPublicFilesByFatherId:output_type -> pb.GetPublicFilesByFatherIdResp
	41, // 59: pb.filecenter.GetAllPublicFileByFatherId:output_type -> pb.GetAllPublicFileByFatherIdResp
	43, // 60: pb.filecenter.GetFileBySharingCode:output_type -> pb.GetFileBySharingCodeResp
	23, // 61: pb.filecenter.CalFileSize:output_type -> pb.CalFileSizeResp
	35, // 62: pb.filecenter.CalPublicFileSize:output_type -> pb.CalPublicFileSizeResp
	49, // 63: pb.filecenter.UploadFile:output_type -> pb.UploadFileResp
	51, // 64: pb.filecenter.AskUploadFile:output_type -> pb.AskUploadFileResp
	51, // 65: pb.filecenter.AskUploadFileRollback:output_type -> pb.AskUploadFileResp
	45, // 66: pb.filecenter.DeleteExpiredFiles:output_type -> pb.DeleteExpiredFilesResp
	47, // 67: pb.filecenter.DeleteExpiredShareCodes:output_type -> pb.DeleteExpiredShareCodesResp
	43, // [43:68] is the sub-list for method output_type
	18, // [18:43] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_filecenter_proto_init() }
func file_filecenter_proto_init() {
	if File_filecenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filecenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByMd5Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByMd5Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByFileIdWithUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByFileIdWithUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdsWithUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoByFileIdsWithUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesByFatherIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesByFatherIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesByFatherIdWithUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesByFatherIdWithUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFileByFatherIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFileByFatherIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalFileSizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalFileSizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoInPublicByFileIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoInPublicByFileIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFileByFileIdWithUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFileByFileIdWithUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicByFileIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicByFileIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalPublicFileSizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalPublicFileSizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFilesByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFilesByUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFilesByFatherIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicFilesByFatherIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPublicFileByFatherIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPublicFileByFatherIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileBySharingCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileBySharingCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredFilesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredFilesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredShareCodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredShareCodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskUploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskUploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_filecenter_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_filecenter_proto_msgTypes[33].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filecenter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filecenter_proto_goTypes,
		DependencyIndexes: file_filecenter_proto_depIdxs,
		EnumInfos:         file_filecenter_proto_enumTypes,
		MessageInfos:      file_filecenter_proto_msgTypes,
	}.Build()
	File_filecenter_proto = out.File
	file_filecenter_proto_rawDesc = nil
	file_filecenter_proto_goTypes = nil
	file_filecenter_proto_depIdxs = nil
}
