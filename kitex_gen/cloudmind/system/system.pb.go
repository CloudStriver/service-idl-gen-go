// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: cloudmind/system/system.proto

package system

import (
	context "context"
	basic "github.com/CloudStriver/service-idl-gen-go/kitex_gen/basic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string                   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OnlyType          *int64                   `protobuf:"varint,2,opt,name=onlyType,proto3,oneof" json:"onlyType,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,3,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *GetNotificationsReq) Reset() {
	*x = GetNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsReq) ProtoMessage() {}

func (x *GetNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsReq.ProtoReflect.Descriptor instead.
func (*GetNotificationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{0}
}

func (x *GetNotificationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetNotificationsReq) GetOnlyType() int64 {
	if x != nil && x.OnlyType != nil {
		return *x.OnlyType
	}
	return 0
}

func (x *GetNotificationsReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type GetNotificationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Token         string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetNotificationsResp) Reset() {
	*x = GetNotificationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResp) ProtoMessage() {}

func (x *GetNotificationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResp.ProtoReflect.Descriptor instead.
func (*GetNotificationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationsResp) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUserId    string `protobuf:"bytes,1,opt,name=targetUserId,proto3" json:"targetUserId,omitempty"`
	SourceUserId    string `protobuf:"bytes,2,opt,name=sourceUserId,proto3" json:"sourceUserId,omitempty"`
	SourceContentId string `protobuf:"bytes,3,opt,name=sourceContentId,proto3" json:"sourceContentId,omitempty"`
	TargetType      int64  `protobuf:"varint,4,opt,name=targetType,proto3" json:"targetType,omitempty"`
	Type            int64  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Text            string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateNotificationsReq) Reset() {
	*x = CreateNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationsReq) ProtoMessage() {}

func (x *CreateNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationsReq.ProtoReflect.Descriptor instead.
func (*CreateNotificationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNotificationsReq) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *CreateNotificationsReq) GetSourceUserId() string {
	if x != nil {
		return x.SourceUserId
	}
	return ""
}

func (x *CreateNotificationsReq) GetSourceContentId() string {
	if x != nil {
		return x.SourceContentId
	}
	return ""
}

func (x *CreateNotificationsReq) GetTargetType() int64 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *CreateNotificationsReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateNotificationsReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateNotificationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNotificationsResp) Reset() {
	*x = CreateNotificationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationsResp) ProtoMessage() {}

func (x *CreateNotificationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationsResp.ProtoReflect.Descriptor instead.
func (*CreateNotificationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{3}
}

type GetNotificationCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetNotificationCountReq) Reset() {
	*x = GetNotificationCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationCountReq) ProtoMessage() {}

func (x *GetNotificationCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationCountReq.ProtoReflect.Descriptor instead.
func (*GetNotificationCountReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotificationCountReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetNotificationCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetNotificationCountResp) Reset() {
	*x = GetNotificationCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationCountResp) ProtoMessage() {}

func (x *GetNotificationCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationCountResp.ProtoReflect.Descriptor instead.
func (*GetNotificationCountResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{5}
}

func (x *GetNotificationCountResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateNotificationCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreateNotificationCountReq) Reset() {
	*x = CreateNotificationCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationCountReq) ProtoMessage() {}

func (x *CreateNotificationCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationCountReq.ProtoReflect.Descriptor instead.
func (*CreateNotificationCountReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNotificationCountReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateNotificationCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNotificationCountResp) Reset() {
	*x = CreateNotificationCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationCountResp) ProtoMessage() {}

func (x *CreateNotificationCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationCountResp.ProtoReflect.Descriptor instead.
func (*CreateNotificationCountResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{7}
}

type DeleteNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NotificationIds []string `protobuf:"bytes,2,rep,name=notificationIds,proto3" json:"notificationIds,omitempty"`
	OnlyType        *int64   `protobuf:"varint,3,opt,name=onlyType,proto3,oneof" json:"onlyType,omitempty"`
}

func (x *DeleteNotificationsReq) Reset() {
	*x = DeleteNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationsReq) ProtoMessage() {}

func (x *DeleteNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationsReq.ProtoReflect.Descriptor instead.
func (*DeleteNotificationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteNotificationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteNotificationsReq) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *DeleteNotificationsReq) GetOnlyType() int64 {
	if x != nil && x.OnlyType != nil {
		return *x.OnlyType
	}
	return 0
}

type DeleteNotificationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNotificationsResp) Reset() {
	*x = DeleteNotificationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationsResp) ProtoMessage() {}

func (x *DeleteNotificationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationsResp.ProtoReflect.Descriptor instead.
func (*DeleteNotificationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{9}
}

type GetSlidersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyType          *int64                   `protobuf:"varint,1,opt,name=onlyType,proto3,oneof" json:"onlyType,omitempty"`                  // 类型
	OnlyIsPublic      *int64                   `protobuf:"varint,2,opt,name=onlyIsPublic,proto3,oneof" json:"onlyIsPublic,omitempty"`          // 是否公开
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,3,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"` //  分页
}

func (x *GetSlidersReq) Reset() {
	*x = GetSlidersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlidersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlidersReq) ProtoMessage() {}

func (x *GetSlidersReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlidersReq.ProtoReflect.Descriptor instead.
func (*GetSlidersReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{10}
}

func (x *GetSlidersReq) GetOnlyType() int64 {
	if x != nil && x.OnlyType != nil {
		return *x.OnlyType
	}
	return 0
}

func (x *GetSlidersReq) GetOnlyIsPublic() int64 {
	if x != nil && x.OnlyIsPublic != nil {
		return *x.OnlyIsPublic
	}
	return 0
}

func (x *GetSlidersReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type GetSlidersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sliders []*Slider `protobuf:"bytes,1,rep,name=sliders,proto3" json:"sliders,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token   string    `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetSlidersResp) Reset() {
	*x = GetSlidersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlidersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlidersResp) ProtoMessage() {}

func (x *GetSlidersResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlidersResp.ProtoReflect.Descriptor instead.
func (*GetSlidersResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{11}
}

func (x *GetSlidersResp) GetSliders() []*Slider {
	if x != nil {
		return x.Sliders
	}
	return nil
}

func (x *GetSlidersResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSlidersResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateSliderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string `protobuf:"bytes,1,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`  // 图片链接
	LinkUrl  string `protobuf:"bytes,2,opt,name=linkUrl,proto3" json:"linkUrl,omitempty"`    // 跳转链接
	IsPublic int64  `protobuf:"varint,3,opt,name=isPublic,proto3" json:"isPublic,omitempty"` // 是否公开
}

func (x *CreateSliderReq) Reset() {
	*x = CreateSliderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSliderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSliderReq) ProtoMessage() {}

func (x *CreateSliderReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSliderReq.ProtoReflect.Descriptor instead.
func (*CreateSliderReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{12}
}

func (x *CreateSliderReq) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreateSliderReq) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *CreateSliderReq) GetIsPublic() int64 {
	if x != nil {
		return x.IsPublic
	}
	return 0
}

type CreateSliderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSliderResp) Reset() {
	*x = CreateSliderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSliderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSliderResp) ProtoMessage() {}

func (x *CreateSliderResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSliderResp.ProtoReflect.Descriptor instead.
func (*CreateSliderResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{13}
}

type UpdateSliderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliderId string `protobuf:"bytes,1,opt,name=sliderId,proto3" json:"sliderId,omitempty"`
	ImageUrl string `protobuf:"bytes,2,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	LinkUrl  string `protobuf:"bytes,3,opt,name=linkUrl,proto3" json:"linkUrl,omitempty"`
	IsPublic int64  `protobuf:"varint,4,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
}

func (x *UpdateSliderReq) Reset() {
	*x = UpdateSliderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSliderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSliderReq) ProtoMessage() {}

func (x *UpdateSliderReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSliderReq.ProtoReflect.Descriptor instead.
func (*UpdateSliderReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSliderReq) GetSliderId() string {
	if x != nil {
		return x.SliderId
	}
	return ""
}

func (x *UpdateSliderReq) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateSliderReq) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *UpdateSliderReq) GetIsPublic() int64 {
	if x != nil {
		return x.IsPublic
	}
	return 0
}

type UpdateSliderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSliderResp) Reset() {
	*x = UpdateSliderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSliderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSliderResp) ProtoMessage() {}

func (x *UpdateSliderResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSliderResp.ProtoReflect.Descriptor instead.
func (*UpdateSliderResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{15}
}

type DeleteSliderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliderId string `protobuf:"bytes,1,opt,name=sliderId,proto3" json:"sliderId,omitempty"`
}

func (x *DeleteSliderReq) Reset() {
	*x = DeleteSliderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSliderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSliderReq) ProtoMessage() {}

func (x *DeleteSliderReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSliderReq.ProtoReflect.Descriptor instead.
func (*DeleteSliderReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSliderReq) GetSliderId() string {
	if x != nil {
		return x.SliderId
	}
	return ""
}

type DeleteSliderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSliderResp) Reset() {
	*x = DeleteSliderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSliderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSliderResp) ProtoMessage() {}

func (x *DeleteSliderResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSliderResp.ProtoReflect.Descriptor instead.
func (*DeleteSliderResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{17}
}

var File_cloudmind_system_system_proto protoreflect.FileDescriptor

var file_cloudmind_system_system_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x6e,
	0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01,
	0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x44, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd2, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x34, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xda, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02,
	0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x07,
	0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x63, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69,
	0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x32, 0x87, 0x07,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x12, 0x21,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x76, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudmind_system_system_proto_rawDescOnce sync.Once
	file_cloudmind_system_system_proto_rawDescData = file_cloudmind_system_system_proto_rawDesc
)

func file_cloudmind_system_system_proto_rawDescGZIP() []byte {
	file_cloudmind_system_system_proto_rawDescOnce.Do(func() {
		file_cloudmind_system_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudmind_system_system_proto_rawDescData)
	})
	return file_cloudmind_system_system_proto_rawDescData
}

var file_cloudmind_system_system_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_cloudmind_system_system_proto_goTypes = []interface{}{
	(*GetNotificationsReq)(nil),         // 0: cloudmind.system.GetNotificationsReq
	(*GetNotificationsResp)(nil),        // 1: cloudmind.system.GetNotificationsResp
	(*CreateNotificationsReq)(nil),      // 2: cloudmind.system.CreateNotificationsReq
	(*CreateNotificationsResp)(nil),     // 3: cloudmind.system.CreateNotificationsResp
	(*GetNotificationCountReq)(nil),     // 4: cloudmind.system.GetNotificationCountReq
	(*GetNotificationCountResp)(nil),    // 5: cloudmind.system.GetNotificationCountResp
	(*CreateNotificationCountReq)(nil),  // 6: cloudmind.system.CreateNotificationCountReq
	(*CreateNotificationCountResp)(nil), // 7: cloudmind.system.CreateNotificationCountResp
	(*DeleteNotificationsReq)(nil),      // 8: cloudmind.system.DeleteNotificationsReq
	(*DeleteNotificationsResp)(nil),     // 9: cloudmind.system.DeleteNotificationsResp
	(*GetSlidersReq)(nil),               // 10: cloudmind.system.GetSlidersReq
	(*GetSlidersResp)(nil),              // 11: cloudmind.system.GetSlidersResp
	(*CreateSliderReq)(nil),             // 12: cloudmind.system.CreateSliderReq
	(*CreateSliderResp)(nil),            // 13: cloudmind.system.CreateSliderResp
	(*UpdateSliderReq)(nil),             // 14: cloudmind.system.UpdateSliderReq
	(*UpdateSliderResp)(nil),            // 15: cloudmind.system.UpdateSliderResp
	(*DeleteSliderReq)(nil),             // 16: cloudmind.system.DeleteSliderReq
	(*DeleteSliderResp)(nil),            // 17: cloudmind.system.DeleteSliderResp
	(*basic.PaginationOptions)(nil),     // 18: basic.PaginationOptions
	(*Notification)(nil),                // 19: cloudmind.system.Notification
	(*Slider)(nil),                      // 20: cloudmind.system.Slider
}
var file_cloudmind_system_system_proto_depIdxs = []int32{
	18, // 0: cloudmind.system.GetNotificationsReq.paginationOptions:type_name -> basic.PaginationOptions
	19, // 1: cloudmind.system.GetNotificationsResp.notifications:type_name -> cloudmind.system.Notification
	18, // 2: cloudmind.system.GetSlidersReq.paginationOptions:type_name -> basic.PaginationOptions
	20, // 3: cloudmind.system.GetSlidersResp.sliders:type_name -> cloudmind.system.Slider
	10, // 4: cloudmind.system.SystemService.GetSliders:input_type -> cloudmind.system.GetSlidersReq
	12, // 5: cloudmind.system.SystemService.CreateSlider:input_type -> cloudmind.system.CreateSliderReq
	14, // 6: cloudmind.system.SystemService.UpdateSlider:input_type -> cloudmind.system.UpdateSliderReq
	16, // 7: cloudmind.system.SystemService.DeleteSlider:input_type -> cloudmind.system.DeleteSliderReq
	0,  // 8: cloudmind.system.SystemService.GetNotifications:input_type -> cloudmind.system.GetNotificationsReq
	4,  // 9: cloudmind.system.SystemService.GetNotificationCount:input_type -> cloudmind.system.GetNotificationCountReq
	2,  // 10: cloudmind.system.SystemService.CreateNotifications:input_type -> cloudmind.system.CreateNotificationsReq
	6,  // 11: cloudmind.system.SystemService.CreateNotificationCount:input_type -> cloudmind.system.CreateNotificationCountReq
	8,  // 12: cloudmind.system.SystemService.DeleteNotifications:input_type -> cloudmind.system.DeleteNotificationsReq
	11, // 13: cloudmind.system.SystemService.GetSliders:output_type -> cloudmind.system.GetSlidersResp
	13, // 14: cloudmind.system.SystemService.CreateSlider:output_type -> cloudmind.system.CreateSliderResp
	15, // 15: cloudmind.system.SystemService.UpdateSlider:output_type -> cloudmind.system.UpdateSliderResp
	17, // 16: cloudmind.system.SystemService.DeleteSlider:output_type -> cloudmind.system.DeleteSliderResp
	1,  // 17: cloudmind.system.SystemService.GetNotifications:output_type -> cloudmind.system.GetNotificationsResp
	5,  // 18: cloudmind.system.SystemService.GetNotificationCount:output_type -> cloudmind.system.GetNotificationCountResp
	3,  // 19: cloudmind.system.SystemService.CreateNotifications:output_type -> cloudmind.system.CreateNotificationsResp
	7,  // 20: cloudmind.system.SystemService.CreateNotificationCount:output_type -> cloudmind.system.CreateNotificationCountResp
	9,  // 21: cloudmind.system.SystemService.DeleteNotifications:output_type -> cloudmind.system.DeleteNotificationsResp
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cloudmind_system_system_proto_init() }
func file_cloudmind_system_system_proto_init() {
	if File_cloudmind_system_system_proto != nil {
		return
	}
	file_cloudmind_system_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloudmind_system_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotificationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlidersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlidersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSliderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSliderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSliderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSliderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSliderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSliderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloudmind_system_system_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_cloudmind_system_system_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_cloudmind_system_system_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudmind_system_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudmind_system_system_proto_goTypes,
		DependencyIndexes: file_cloudmind_system_system_proto_depIdxs,
		MessageInfos:      file_cloudmind_system_system_proto_msgTypes,
	}.Build()
	File_cloudmind_system_system_proto = out.File
	file_cloudmind_system_system_proto_rawDesc = nil
	file_cloudmind_system_system_proto_goTypes = nil
	file_cloudmind_system_system_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.8.0. DO NOT EDIT.

type SystemService interface {
	GetSliders(ctx context.Context, req *GetSlidersReq) (res *GetSlidersResp, err error)
	CreateSlider(ctx context.Context, req *CreateSliderReq) (res *CreateSliderResp, err error)
	UpdateSlider(ctx context.Context, req *UpdateSliderReq) (res *UpdateSliderResp, err error)
	DeleteSlider(ctx context.Context, req *DeleteSliderReq) (res *DeleteSliderResp, err error)
	GetNotifications(ctx context.Context, req *GetNotificationsReq) (res *GetNotificationsResp, err error)
	GetNotificationCount(ctx context.Context, req *GetNotificationCountReq) (res *GetNotificationCountResp, err error)
	CreateNotifications(ctx context.Context, req *CreateNotificationsReq) (res *CreateNotificationsResp, err error)
	CreateNotificationCount(ctx context.Context, req *CreateNotificationCountReq) (res *CreateNotificationCountResp, err error)
	DeleteNotifications(ctx context.Context, req *DeleteNotificationsReq) (res *DeleteNotificationsResp, err error)
}
