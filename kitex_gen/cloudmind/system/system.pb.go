// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: cloudmind/system/system.proto

package system

import (
	context "context"
	basic "github.com/CloudStriver/service-idl-gen-go/kitex_gen/basic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterOptions     *NotificationFilterOptions `protobuf:"bytes,1,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
	PaginationOptions *basic.PaginationOptions   `protobuf:"bytes,2,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *GetNotificationsReq) Reset() {
	*x = GetNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsReq) ProtoMessage() {}

func (x *GetNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsReq.ProtoReflect.Descriptor instead.
func (*GetNotificationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{0}
}

func (x *GetNotificationsReq) GetFilterOptions() *NotificationFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *GetNotificationsReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type GetNotificationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Total         int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token         string          `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetNotificationsResp) Reset() {
	*x = GetNotificationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResp) ProtoMessage() {}

func (x *GetNotificationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResp.ProtoReflect.Descriptor instead.
func (*GetNotificationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationsResp) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetNotificationsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReadNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterOptions *NotificationFilterOptions `protobuf:"bytes,1,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
}

func (x *ReadNotificationsReq) Reset() {
	*x = ReadNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationsReq) ProtoMessage() {}

func (x *ReadNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationsReq.ProtoReflect.Descriptor instead.
func (*ReadNotificationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{2}
}

func (x *ReadNotificationsReq) GetFilterOptions() *NotificationFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

type ReadNotificationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotRead int64 `protobuf:"varint,1,opt,name=notRead,proto3" json:"notRead,omitempty"`
}

func (x *ReadNotificationsResp) Reset() {
	*x = ReadNotificationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationsResp) ProtoMessage() {}

func (x *ReadNotificationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationsResp.ProtoReflect.Descriptor instead.
func (*ReadNotificationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{3}
}

func (x *ReadNotificationsResp) GetNotRead() int64 {
	if x != nil {
		return x.NotRead
	}
	return 0
}

type CreateNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *CreateNotificationReq) Reset() {
	*x = CreateNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationReq) ProtoMessage() {}

func (x *CreateNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationReq.ProtoReflect.Descriptor instead.
func (*CreateNotificationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNotificationReq) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type CreateNotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNotificationResp) Reset() {
	*x = CreateNotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResp) ProtoMessage() {}

func (x *CreateNotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResp.ProtoReflect.Descriptor instead.
func (*CreateNotificationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{5}
}

type CleanNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CleanNotificationReq) Reset() {
	*x = CleanNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanNotificationReq) ProtoMessage() {}

func (x *CleanNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanNotificationReq.ProtoReflect.Descriptor instead.
func (*CleanNotificationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{6}
}

func (x *CleanNotificationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CleanNotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CleanNotificationResp) Reset() {
	*x = CleanNotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanNotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanNotificationResp) ProtoMessage() {}

func (x *CleanNotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanNotificationResp.ProtoReflect.Descriptor instead.
func (*CleanNotificationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{7}
}

type ReadNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
}

func (x *ReadNotificationReq) Reset() {
	*x = ReadNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationReq) ProtoMessage() {}

func (x *ReadNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationReq.ProtoReflect.Descriptor instead.
func (*ReadNotificationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{8}
}

func (x *ReadNotificationReq) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type ReadNotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadNotificationResp) Reset() {
	*x = ReadNotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationResp) ProtoMessage() {}

func (x *ReadNotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationResp.ProtoReflect.Descriptor instead.
func (*ReadNotificationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{9}
}

type GetNotificationCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterOptions *NotificationFilterOptions `protobuf:"bytes,1,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
}

func (x *GetNotificationCountReq) Reset() {
	*x = GetNotificationCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationCountReq) ProtoMessage() {}

func (x *GetNotificationCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationCountReq.ProtoReflect.Descriptor instead.
func (*GetNotificationCountReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{10}
}

func (x *GetNotificationCountReq) GetFilterOptions() *NotificationFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

type GetNotificationCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetNotificationCountResp) Reset() {
	*x = GetNotificationCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_system_system_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationCountResp) ProtoMessage() {}

func (x *GetNotificationCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_system_system_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationCountResp.ProtoReflect.Descriptor instead.
func (*GetNotificationCountResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_system_system_proto_rawDescGZIP(), []int{11}
}

func (x *GetNotificationCountResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_cloudmind_system_system_proto protoreflect.FileDescriptor

var file_cloudmind_system_system_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x56, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52,
	0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x88, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x61,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x56, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x52,
	0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x22, 0x5b,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3d,
	0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x56, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x30, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xf9, 0x04,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x64, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudmind_system_system_proto_rawDescOnce sync.Once
	file_cloudmind_system_system_proto_rawDescData = file_cloudmind_system_system_proto_rawDesc
)

func file_cloudmind_system_system_proto_rawDescGZIP() []byte {
	file_cloudmind_system_system_proto_rawDescOnce.Do(func() {
		file_cloudmind_system_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudmind_system_system_proto_rawDescData)
	})
	return file_cloudmind_system_system_proto_rawDescData
}

var file_cloudmind_system_system_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cloudmind_system_system_proto_goTypes = []interface{}{
	(*GetNotificationsReq)(nil),       // 0: cloudmind.system.GetNotificationsReq
	(*GetNotificationsResp)(nil),      // 1: cloudmind.system.GetNotificationsResp
	(*ReadNotificationsReq)(nil),      // 2: cloudmind.system.ReadNotificationsReq
	(*ReadNotificationsResp)(nil),     // 3: cloudmind.system.ReadNotificationsResp
	(*CreateNotificationReq)(nil),     // 4: cloudmind.system.CreateNotificationReq
	(*CreateNotificationResp)(nil),    // 5: cloudmind.system.CreateNotificationResp
	(*CleanNotificationReq)(nil),      // 6: cloudmind.system.CleanNotificationReq
	(*CleanNotificationResp)(nil),     // 7: cloudmind.system.CleanNotificationResp
	(*ReadNotificationReq)(nil),       // 8: cloudmind.system.ReadNotificationReq
	(*ReadNotificationResp)(nil),      // 9: cloudmind.system.ReadNotificationResp
	(*GetNotificationCountReq)(nil),   // 10: cloudmind.system.GetNotificationCountReq
	(*GetNotificationCountResp)(nil),  // 11: cloudmind.system.GetNotificationCountResp
	(*NotificationFilterOptions)(nil), // 12: cloudmind.system.NotificationFilterOptions
	(*basic.PaginationOptions)(nil),   // 13: basic.PaginationOptions
	(*Notification)(nil),              // 14: cloudmind.system.Notification
}
var file_cloudmind_system_system_proto_depIdxs = []int32{
	12, // 0: cloudmind.system.GetNotificationsReq.filterOptions:type_name -> cloudmind.system.NotificationFilterOptions
	13, // 1: cloudmind.system.GetNotificationsReq.paginationOptions:type_name -> basic.PaginationOptions
	14, // 2: cloudmind.system.GetNotificationsResp.notifications:type_name -> cloudmind.system.Notification
	12, // 3: cloudmind.system.ReadNotificationsReq.filterOptions:type_name -> cloudmind.system.NotificationFilterOptions
	14, // 4: cloudmind.system.CreateNotificationReq.notification:type_name -> cloudmind.system.Notification
	12, // 5: cloudmind.system.GetNotificationCountReq.filterOptions:type_name -> cloudmind.system.NotificationFilterOptions
	0,  // 6: cloudmind.system.SystemService.GetNotifications:input_type -> cloudmind.system.GetNotificationsReq
	6,  // 7: cloudmind.system.SystemService.CleanNotification:input_type -> cloudmind.system.CleanNotificationReq
	10, // 8: cloudmind.system.SystemService.GetNotificationCount:input_type -> cloudmind.system.GetNotificationCountReq
	8,  // 9: cloudmind.system.SystemService.ReadNotification:input_type -> cloudmind.system.ReadNotificationReq
	4,  // 10: cloudmind.system.SystemService.CreateNotification:input_type -> cloudmind.system.CreateNotificationReq
	2,  // 11: cloudmind.system.SystemService.ReadNotifications:input_type -> cloudmind.system.ReadNotificationsReq
	1,  // 12: cloudmind.system.SystemService.GetNotifications:output_type -> cloudmind.system.GetNotificationsResp
	7,  // 13: cloudmind.system.SystemService.CleanNotification:output_type -> cloudmind.system.CleanNotificationResp
	11, // 14: cloudmind.system.SystemService.GetNotificationCount:output_type -> cloudmind.system.GetNotificationCountResp
	9,  // 15: cloudmind.system.SystemService.ReadNotification:output_type -> cloudmind.system.ReadNotificationResp
	5,  // 16: cloudmind.system.SystemService.CreateNotification:output_type -> cloudmind.system.CreateNotificationResp
	3,  // 17: cloudmind.system.SystemService.ReadNotifications:output_type -> cloudmind.system.ReadNotificationsResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_cloudmind_system_system_proto_init() }
func file_cloudmind_system_system_proto_init() {
	if File_cloudmind_system_system_proto != nil {
		return
	}
	file_cloudmind_system_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloudmind_system_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanNotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_system_system_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloudmind_system_system_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_cloudmind_system_system_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_cloudmind_system_system_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudmind_system_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudmind_system_system_proto_goTypes,
		DependencyIndexes: file_cloudmind_system_system_proto_depIdxs,
		MessageInfos:      file_cloudmind_system_system_proto_msgTypes,
	}.Build()
	File_cloudmind_system_system_proto = out.File
	file_cloudmind_system_system_proto_rawDesc = nil
	file_cloudmind_system_system_proto_goTypes = nil
	file_cloudmind_system_system_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.8.0. DO NOT EDIT.

type SystemService interface {
	GetNotifications(ctx context.Context, req *GetNotificationsReq) (res *GetNotificationsResp, err error)
	CleanNotification(ctx context.Context, req *CleanNotificationReq) (res *CleanNotificationResp, err error)
	GetNotificationCount(ctx context.Context, req *GetNotificationCountReq) (res *GetNotificationCountResp, err error)
	ReadNotification(ctx context.Context, req *ReadNotificationReq) (res *ReadNotificationResp, err error)
	CreateNotification(ctx context.Context, req *CreateNotificationReq) (res *CreateNotificationResp, err error)
	ReadNotifications(ctx context.Context, req *ReadNotificationsReq) (res *ReadNotificationsResp, err error)
}
