// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: cloudmind/core_api/comment.proto

package core_api

import (
	context "context"
	_ "github.com/CloudStriver/service-idl-gen-go/kitex_gen/basic"
	_ "github.com/CloudStriver/service-idl-gen-go/kitex_gen/http"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *Comment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateCommentReq) Reset() {
	*x = CreateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReq) ProtoMessage() {}

func (x *CreateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReq.ProtoReflect.Descriptor instead.
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCommentReq) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
}

func (x *CreateCommentResp) Reset() {
	*x = CreateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResp) ProtoMessage() {}

func (x *CreateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResp.ProtoReflect.Descriptor instead.
func (*CreateCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentResp) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId,omitempty"`
}

func (x *GetCommentReq) Reset() {
	*x = GetCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentReq) ProtoMessage() {}

func (x *GetCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentReq.ProtoReflect.Descriptor instead.
func (*GetCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{2}
}

func (x *GetCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *CommentInfo `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetCommentResp) Reset() {
	*x = GetCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResp) ProtoMessage() {}

func (x *GetCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResp.ProtoReflect.Descriptor instead.
func (*GetCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommentResp) GetComment() *CommentInfo {
	if x != nil {
		return x.Comment
	}
	return nil
}

type GetCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyUserId    *string `protobuf:"bytes,1,opt,name=onlyUserId,proto3,oneof" json:"onlyUserId,omitempty"`
	OnlyAtUserId  *string `protobuf:"bytes,2,opt,name=onlyAtUserId,proto3,oneof" json:"onlyAtUserId,omitempty"`
	OnlyCommentId *string `protobuf:"bytes,3,opt,name=onlyCommentId,proto3,oneof" json:"onlyCommentId,omitempty"`
	OnlySubjectId *string `protobuf:"bytes,4,opt,name=onlySubjectId,proto3,oneof" json:"onlySubjectId,omitempty"`
	OnlyRootId    *string `protobuf:"bytes,5,opt,name=onlyRootId,proto3,oneof" json:"onlyRootId,omitempty"`
	OnlyFatherId  *string `protobuf:"bytes,6,opt,name=onlyFatherId,proto3,oneof" json:"onlyFatherId,omitempty"`
	OnlyState     *int64  `protobuf:"varint,7,opt,name=onlyState,proto3,oneof" json:"onlyState,omitempty"`
	OnlyAttrs     *int64  `protobuf:"varint,8,opt,name=onlyAttrs,proto3,oneof" json:"onlyAttrs,omitempty"`
	Limit         *int64  `protobuf:"varint,9,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	LastToken     *string `protobuf:"bytes,10,opt,name=lastToken,proto3,oneof" json:"lastToken,omitempty"`
	Backward      *bool   `protobuf:"varint,11,opt,name=backward,proto3,oneof" json:"backward,omitempty"`
	Offset        *int64  `protobuf:"varint,12,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *GetCommentsReq) Reset() {
	*x = GetCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsReq) ProtoMessage() {}

func (x *GetCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsReq.ProtoReflect.Descriptor instead.
func (*GetCommentsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentsReq) GetOnlyUserId() string {
	if x != nil && x.OnlyUserId != nil {
		return *x.OnlyUserId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyAtUserId() string {
	if x != nil && x.OnlyAtUserId != nil {
		return *x.OnlyAtUserId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyCommentId() string {
	if x != nil && x.OnlyCommentId != nil {
		return *x.OnlyCommentId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlySubjectId() string {
	if x != nil && x.OnlySubjectId != nil {
		return *x.OnlySubjectId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyRootId() string {
	if x != nil && x.OnlyRootId != nil {
		return *x.OnlyRootId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyFatherId() string {
	if x != nil && x.OnlyFatherId != nil {
		return *x.OnlyFatherId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyState() int64 {
	if x != nil && x.OnlyState != nil {
		return *x.OnlyState
	}
	return 0
}

func (x *GetCommentsReq) GetOnlyAttrs() int64 {
	if x != nil && x.OnlyAttrs != nil {
		return *x.OnlyAttrs
	}
	return 0
}

func (x *GetCommentsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetCommentsReq) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *GetCommentsReq) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *GetCommentsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetCommentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentInfo `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	Total    int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token    string         `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetCommentsResp) Reset() {
	*x = GetCommentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsResp) ProtoMessage() {}

func (x *GetCommentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsResp.ProtoReflect.Descriptor instead.
func (*GetCommentsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommentsResp) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetCommentsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCommentsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *Comment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateCommentReq) Reset() {
	*x = UpdateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentReq) ProtoMessage() {}

func (x *UpdateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCommentReq) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentResp) Reset() {
	*x = UpdateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentResp) ProtoMessage() {}

func (x *UpdateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{7}
}

type DeleteCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
}

func (x *DeleteCommentReq) Reset() {
	*x = DeleteCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReq) ProtoMessage() {}

func (x *DeleteCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommentResp) Reset() {
	*x = DeleteCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResp) ProtoMessage() {}

func (x *DeleteCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResp.ProtoReflect.Descriptor instead.
func (*DeleteCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{9}
}

type SetCommentStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	State     State  `protobuf:"varint,3,opt,name=state,proto3,enum=cloudmind.core_api.State" json:"state,omitempty"`
}

func (x *SetCommentStateReq) Reset() {
	*x = SetCommentStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentStateReq) ProtoMessage() {}

func (x *SetCommentStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentStateReq.ProtoReflect.Descriptor instead.
func (*SetCommentStateReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{10}
}

func (x *SetCommentStateReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *SetCommentStateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetCommentStateReq) GetState() State {
	if x != nil {
		return x.State
	}
	return State_UnknownState
}

type SetCommentStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCommentStateResp) Reset() {
	*x = SetCommentStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentStateResp) ProtoMessage() {}

func (x *SetCommentStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentStateResp.ProtoReflect.Descriptor instead.
func (*SetCommentStateResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{11}
}

type SetCommentAttrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Attrs     Attrs  `protobuf:"varint,3,opt,name=attrs,proto3,enum=cloudmind.core_api.Attrs" json:"attrs,omitempty"`
	SubjectId string `protobuf:"bytes,4,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	SortTime  int64  `protobuf:"varint,5,opt,name=sortTime,proto3" json:"sortTime,omitempty"`
}

func (x *SetCommentAttrsReq) Reset() {
	*x = SetCommentAttrsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsReq) ProtoMessage() {}

func (x *SetCommentAttrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsReq.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{12}
}

func (x *SetCommentAttrsReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *SetCommentAttrsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetCommentAttrsReq) GetAttrs() Attrs {
	if x != nil {
		return x.Attrs
	}
	return Attrs_UnknownAttrs
}

func (x *SetCommentAttrsReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *SetCommentAttrsReq) GetSortTime() int64 {
	if x != nil {
		return x.SortTime
	}
	return 0
}

type SetCommentAttrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCommentAttrsResp) Reset() {
	*x = SetCommentAttrsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsResp) ProtoMessage() {}

func (x *SetCommentAttrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsResp.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{13}
}

type GetCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
}

func (x *GetCommentSubjectReq) Reset() {
	*x = GetCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentSubjectReq) ProtoMessage() {}

func (x *GetCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*GetCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{14}
}

func (x *GetCommentSubjectReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type GetCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *SubjectDetails `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GetCommentSubjectResp) Reset() {
	*x = GetCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentSubjectResp) ProtoMessage() {}

func (x *GetCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*GetCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{15}
}

func (x *GetCommentSubjectResp) GetSubject() *SubjectDetails {
	if x != nil {
		return x.Subject
	}
	return nil
}

type CreateCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *CreateCommentSubjectReq) Reset() {
	*x = CreateCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentSubjectReq) ProtoMessage() {}

func (x *CreateCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*CreateCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCommentSubjectReq) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type CreateCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
}

func (x *CreateCommentSubjectResp) Reset() {
	*x = CreateCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentSubjectResp) ProtoMessage() {}

func (x *CreateCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*CreateCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCommentSubjectResp) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type UpdateCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *UpdateCommentSubjectReq) Reset() {
	*x = UpdateCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentSubjectReq) ProtoMessage() {}

func (x *UpdateCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCommentSubjectReq) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type UpdateCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentSubjectResp) Reset() {
	*x = UpdateCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentSubjectResp) ProtoMessage() {}

func (x *UpdateCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{19}
}

type DeleteCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteCommentSubjectReq) Reset() {
	*x = DeleteCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentSubjectReq) ProtoMessage() {}

func (x *DeleteCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteCommentSubjectReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCommentSubjectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommentSubjectResp) Reset() {
	*x = DeleteCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentSubjectResp) ProtoMessage() {}

func (x *DeleteCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*DeleteCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{21}
}

type CreateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CreateLabelReq) Reset() {
	*x = CreateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelReq) ProtoMessage() {}

func (x *CreateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelReq.ProtoReflect.Descriptor instead.
func (*CreateLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{22}
}

func (x *CreateLabelReq) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type CreateLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
}

func (x *CreateLabelResp) Reset() {
	*x = CreateLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelResp) ProtoMessage() {}

func (x *CreateLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelResp.ProtoReflect.Descriptor instead.
func (*CreateLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{23}
}

func (x *CreateLabelResp) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type DeleteLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
}

func (x *DeleteLabelReq) Reset() {
	*x = DeleteLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelReq) ProtoMessage() {}

func (x *DeleteLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelReq.ProtoReflect.Descriptor instead.
func (*DeleteLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteLabelReq) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type DeleteLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLabelResp) Reset() {
	*x = DeleteLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelResp) ProtoMessage() {}

func (x *DeleteLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelResp.ProtoReflect.Descriptor instead.
func (*DeleteLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{25}
}

type GetLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
}

func (x *GetLabelReq) Reset() {
	*x = GetLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelReq) ProtoMessage() {}

func (x *GetLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelReq.ProtoReflect.Descriptor instead.
func (*GetLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{26}
}

func (x *GetLabelReq) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type GetLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *GetLabelResp) Reset() {
	*x = GetLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelResp) ProtoMessage() {}

func (x *GetLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelResp.ProtoReflect.Descriptor instead.
func (*GetLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{27}
}

func (x *GetLabelResp) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type UpdateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *UpdateLabelReq) Reset() {
	*x = UpdateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelReq) ProtoMessage() {}

func (x *UpdateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelReq.ProtoReflect.Descriptor instead.
func (*UpdateLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateLabelReq) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type UpdateLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLabelResp) Reset() {
	*x = UpdateLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelResp) ProtoMessage() {}

func (x *UpdateLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelResp.ProtoReflect.Descriptor instead.
func (*UpdateLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{29}
}

type GetLabelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // 用于匹配标签的key
	Limit     *int64  `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	LastToken *string `protobuf:"bytes,3,opt,name=lastToken,proto3,oneof" json:"lastToken,omitempty"`
	Backward  *bool   `protobuf:"varint,4,opt,name=backward,proto3,oneof" json:"backward,omitempty"`
	Offset    *int64  `protobuf:"varint,5,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *GetLabelsReq) Reset() {
	*x = GetLabelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsReq) ProtoMessage() {}

func (x *GetLabelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsReq.ProtoReflect.Descriptor instead.
func (*GetLabelsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{30}
}

func (x *GetLabelsReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetLabelsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetLabelsReq) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *GetLabelsReq) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *GetLabelsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetLabelsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []*Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token  string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetLabelsResp) Reset() {
	*x = GetLabelsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsResp) ProtoMessage() {}

func (x *GetLabelsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsResp.ProtoReflect.Descriptor instead.
func (*GetLabelsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{31}
}

func (x *GetLabelsResp) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetLabelsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLabelsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetLabelsInBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelIds []string `protobuf:"bytes,1,rep,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *GetLabelsInBatchReq) Reset() {
	*x = GetLabelsInBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsInBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsInBatchReq) ProtoMessage() {}

func (x *GetLabelsInBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsInBatchReq.ProtoReflect.Descriptor instead.
func (*GetLabelsInBatchReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{32}
}

func (x *GetLabelsInBatchReq) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type GetLabelsInBatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []*Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *GetLabelsInBatchResp) Reset() {
	*x = GetLabelsInBatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_comment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsInBatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsInBatchResp) ProtoMessage() {}

func (x *GetLabelsInBatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_comment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsInBatchResp.ProtoReflect.Descriptor instead.
func (*GetLabelsInBatchResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_comment_proto_rawDescGZIP(), []int{33}
}

func (x *GetLabelsInBatchResp) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_cloudmind_core_api_comment_proto protoreflect.FileDescriptor

var file_cloudmind_core_api_comment_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x49, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2d,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf4, 0x04, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79,
	0x41, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x6f,
	0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x52, 0x6f, 0x6f,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0c,
	0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x06, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x52, 0x6f,
	0x6f, 0x74, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x49, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x7b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x35, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x38, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x50, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x41,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x41, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2a, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0xcc, 0x01, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x49,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudmind_core_api_comment_proto_rawDescOnce sync.Once
	file_cloudmind_core_api_comment_proto_rawDescData = file_cloudmind_core_api_comment_proto_rawDesc
)

func file_cloudmind_core_api_comment_proto_rawDescGZIP() []byte {
	file_cloudmind_core_api_comment_proto_rawDescOnce.Do(func() {
		file_cloudmind_core_api_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudmind_core_api_comment_proto_rawDescData)
	})
	return file_cloudmind_core_api_comment_proto_rawDescData
}

var file_cloudmind_core_api_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_cloudmind_core_api_comment_proto_goTypes = []interface{}{
	(*CreateCommentReq)(nil),         // 0: cloudmind.core_api.CreateCommentReq
	(*CreateCommentResp)(nil),        // 1: cloudmind.core_api.CreateCommentResp
	(*GetCommentReq)(nil),            // 2: cloudmind.core_api.GetCommentReq
	(*GetCommentResp)(nil),           // 3: cloudmind.core_api.GetCommentResp
	(*GetCommentsReq)(nil),           // 4: cloudmind.core_api.GetCommentsReq
	(*GetCommentsResp)(nil),          // 5: cloudmind.core_api.GetCommentsResp
	(*UpdateCommentReq)(nil),         // 6: cloudmind.core_api.UpdateCommentReq
	(*UpdateCommentResp)(nil),        // 7: cloudmind.core_api.UpdateCommentResp
	(*DeleteCommentReq)(nil),         // 8: cloudmind.core_api.DeleteCommentReq
	(*DeleteCommentResp)(nil),        // 9: cloudmind.core_api.DeleteCommentResp
	(*SetCommentStateReq)(nil),       // 10: cloudmind.core_api.SetCommentStateReq
	(*SetCommentStateResp)(nil),      // 11: cloudmind.core_api.SetCommentStateResp
	(*SetCommentAttrsReq)(nil),       // 12: cloudmind.core_api.SetCommentAttrsReq
	(*SetCommentAttrsResp)(nil),      // 13: cloudmind.core_api.SetCommentAttrsResp
	(*GetCommentSubjectReq)(nil),     // 14: cloudmind.core_api.GetCommentSubjectReq
	(*GetCommentSubjectResp)(nil),    // 15: cloudmind.core_api.GetCommentSubjectResp
	(*CreateCommentSubjectReq)(nil),  // 16: cloudmind.core_api.CreateCommentSubjectReq
	(*CreateCommentSubjectResp)(nil), // 17: cloudmind.core_api.CreateCommentSubjectResp
	(*UpdateCommentSubjectReq)(nil),  // 18: cloudmind.core_api.UpdateCommentSubjectReq
	(*UpdateCommentSubjectResp)(nil), // 19: cloudmind.core_api.UpdateCommentSubjectResp
	(*DeleteCommentSubjectReq)(nil),  // 20: cloudmind.core_api.DeleteCommentSubjectReq
	(*DeleteCommentSubjectResp)(nil), // 21: cloudmind.core_api.DeleteCommentSubjectResp
	(*CreateLabelReq)(nil),           // 22: cloudmind.core_api.CreateLabelReq
	(*CreateLabelResp)(nil),          // 23: cloudmind.core_api.CreateLabelResp
	(*DeleteLabelReq)(nil),           // 24: cloudmind.core_api.DeleteLabelReq
	(*DeleteLabelResp)(nil),          // 25: cloudmind.core_api.DeleteLabelResp
	(*GetLabelReq)(nil),              // 26: cloudmind.core_api.GetLabelReq
	(*GetLabelResp)(nil),             // 27: cloudmind.core_api.GetLabelResp
	(*UpdateLabelReq)(nil),           // 28: cloudmind.core_api.UpdateLabelReq
	(*UpdateLabelResp)(nil),          // 29: cloudmind.core_api.UpdateLabelResp
	(*GetLabelsReq)(nil),             // 30: cloudmind.core_api.GetLabelsReq
	(*GetLabelsResp)(nil),            // 31: cloudmind.core_api.GetLabelsResp
	(*GetLabelsInBatchReq)(nil),      // 32: cloudmind.core_api.GetLabelsInBatchReq
	(*GetLabelsInBatchResp)(nil),     // 33: cloudmind.core_api.GetLabelsInBatchResp
	(*Comment)(nil),                  // 34: cloudmind.core_api.Comment
	(*CommentInfo)(nil),              // 35: cloudmind.core_api.CommentInfo
	(State)(0),                       // 36: cloudmind.core_api.State
	(Attrs)(0),                       // 37: cloudmind.core_api.Attrs
	(*SubjectDetails)(nil),           // 38: cloudmind.core_api.SubjectDetails
	(*Subject)(nil),                  // 39: cloudmind.core_api.Subject
	(*Label)(nil),                    // 40: cloudmind.core_api.Label
}
var file_cloudmind_core_api_comment_proto_depIdxs = []int32{
	34, // 0: cloudmind.core_api.CreateCommentReq.comment:type_name -> cloudmind.core_api.Comment
	35, // 1: cloudmind.core_api.GetCommentResp.comment:type_name -> cloudmind.core_api.CommentInfo
	35, // 2: cloudmind.core_api.GetCommentsResp.comments:type_name -> cloudmind.core_api.CommentInfo
	34, // 3: cloudmind.core_api.UpdateCommentReq.comment:type_name -> cloudmind.core_api.Comment
	36, // 4: cloudmind.core_api.SetCommentStateReq.state:type_name -> cloudmind.core_api.State
	37, // 5: cloudmind.core_api.SetCommentAttrsReq.attrs:type_name -> cloudmind.core_api.Attrs
	38, // 6: cloudmind.core_api.GetCommentSubjectResp.subject:type_name -> cloudmind.core_api.SubjectDetails
	39, // 7: cloudmind.core_api.CreateCommentSubjectReq.subject:type_name -> cloudmind.core_api.Subject
	39, // 8: cloudmind.core_api.UpdateCommentSubjectReq.subject:type_name -> cloudmind.core_api.Subject
	40, // 9: cloudmind.core_api.CreateLabelReq.label:type_name -> cloudmind.core_api.Label
	40, // 10: cloudmind.core_api.GetLabelResp.label:type_name -> cloudmind.core_api.Label
	40, // 11: cloudmind.core_api.UpdateLabelReq.label:type_name -> cloudmind.core_api.Label
	40, // 12: cloudmind.core_api.GetLabelsResp.labels:type_name -> cloudmind.core_api.Label
	40, // 13: cloudmind.core_api.GetLabelsInBatchResp.labels:type_name -> cloudmind.core_api.Label
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cloudmind_core_api_comment_proto_init() }
func file_cloudmind_core_api_comment_proto_init() {
	if File_cloudmind_core_api_comment_proto != nil {
		return
	}
	file_cloudmind_core_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloudmind_core_api_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentAttrsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentAttrsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsInBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_comment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsInBatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloudmind_core_api_comment_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_comment_proto_msgTypes[30].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudmind_core_api_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloudmind_core_api_comment_proto_goTypes,
		DependencyIndexes: file_cloudmind_core_api_comment_proto_depIdxs,
		MessageInfos:      file_cloudmind_core_api_comment_proto_msgTypes,
	}.Build()
	File_cloudmind_core_api_comment_proto = out.File
	file_cloudmind_core_api_comment_proto_rawDesc = nil
	file_cloudmind_core_api_comment_proto_goTypes = nil
	file_cloudmind_core_api_comment_proto_depIdxs = nil
}

var _ context.Context
