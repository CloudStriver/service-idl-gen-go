// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: platform/comment/common.proto

package comment

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attrs int32

const (
	Attrs_UnknownAttrs         Attrs = 0
	Attrs_None                 Attrs = 1 // 无
	Attrs_Pinned               Attrs = 2 // 置顶
	Attrs_Highlighted          Attrs = 3 // 精华
	Attrs_PinnedAndHighlighted Attrs = 4 // 置顶+精华
)

// Enum value maps for Attrs.
var (
	Attrs_name = map[int32]string{
		0: "UnknownAttrs",
		1: "None",
		2: "Pinned",
		3: "Highlighted",
		4: "PinnedAndHighlighted",
	}
	Attrs_value = map[string]int32{
		"UnknownAttrs":         0,
		"None":                 1,
		"Pinned":               2,
		"Highlighted":          3,
		"PinnedAndHighlighted": 4,
	}
)

func (x Attrs) Enum() *Attrs {
	p := new(Attrs)
	*p = x
	return p
}

func (x Attrs) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attrs) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_comment_common_proto_enumTypes[0].Descriptor()
}

func (Attrs) Type() protoreflect.EnumType {
	return &file_platform_comment_common_proto_enumTypes[0]
}

func (x Attrs) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attrs.Descriptor instead.
func (Attrs) EnumDescriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_UnknownState State = 0
	State_Normal       State = 1 // 正常状态
	State_Hidden       State = 2 // 隐藏状态
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "UnknownState",
		1: "Normal",
		2: "Hidden",
	}
	State_value = map[string]int32{
		"UnknownState": 0,
		"Normal":       1,
		"Hidden":       2,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_comment_common_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_platform_comment_common_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{1}
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`     // 评论者
	AtUserId   string `protobuf:"bytes,3,opt,name=atUserId,proto3" json:"atUserId,omitempty"` // @谁
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`   // 内容
	Meta       string `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`         // 皮肤，字体等
	CreateTime int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{0}
}

func (x *Content) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Content) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Content) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *Content) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Content) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Content) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type IndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectId string   `protobuf:"bytes,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	RootId    string   `protobuf:"bytes,3,opt,name=rootId,proto3" json:"rootId,omitempty"`
	FatherId  string   `protobuf:"bytes,4,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	Count     int64    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"` // 回复数
	State     int64    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"` // 1: 正常, 2: 删除
	Attrs     int64    `protobuf:"varint,7,opt,name=attrs,proto3" json:"attrs,omitempty"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
	Tags      []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`    // 标签：作者点赞，作者回复等
}

func (x *IndexInfo) Reset() {
	*x = IndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexInfo) ProtoMessage() {}

func (x *IndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexInfo.ProtoReflect.Descriptor instead.
func (*IndexInfo) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{1}
}

func (x *IndexInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IndexInfo) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *IndexInfo) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *IndexInfo) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *IndexInfo) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *IndexInfo) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *IndexInfo) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *IndexInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectId string   `protobuf:"bytes,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	RootId    string   `protobuf:"bytes,3,opt,name=rootId,proto3" json:"rootId,omitempty"`
	FatherId  string   `protobuf:"bytes,4,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	Count     *int64   `protobuf:"varint,5,opt,name=count,proto3,oneof" json:"count,omitempty"` // 回复数
	State     int64    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`       // 1: 正常, 2: 删除
	Attrs     int64    `protobuf:"varint,7,opt,name=attrs,proto3" json:"attrs,omitempty"`       // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
	Labels    []string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`      // 标签：作者点赞，作者回复等
	UserId    string   `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`      // 评论者
	AtUserId  string   `protobuf:"bytes,10,opt,name=atUserId,proto3" json:"atUserId,omitempty"` // @谁
	Content   string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`   // 内容
	Meta      string   `protobuf:"bytes,12,opt,name=meta,proto3" json:"meta,omitempty"`         // 皮肤，字体等
	SortTime  int64    `protobuf:"varint,13,opt,name=sortTime,proto3" json:"sortTime,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Comment) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *Comment) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *Comment) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Comment) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Comment) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *Comment) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Comment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Comment) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Comment) GetSortTime() int64 {
	if x != nil {
		return x.SortTime
	}
	return 0
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectId  string   `protobuf:"bytes,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	RootId     string   `protobuf:"bytes,3,opt,name=rootId,proto3" json:"rootId,omitempty"`
	FatherId   string   `protobuf:"bytes,4,opt,name=fatherId,proto3" json:"fatherId,omitempty"`
	Count      int64    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`       // 回复数
	State      int64    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`       // 1: 正常, 2: 删除
	Attrs      int64    `protobuf:"varint,7,opt,name=attrs,proto3" json:"attrs,omitempty"`       // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
	Labels     []string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`      // 标签：作者点赞，作者回复等
	UserId     string   `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`      // 评论者
	AtUserId   string   `protobuf:"bytes,10,opt,name=atUserId,proto3" json:"atUserId,omitempty"` // @谁
	Content    string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`   // 内容
	Meta       string   `protobuf:"bytes,12,opt,name=meta,proto3" json:"meta,omitempty"`         // 皮肤，字体等
	CreateTime int64    `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{3}
}

func (x *CommentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentInfo) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CommentInfo) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *CommentInfo) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *CommentInfo) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CommentInfo) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CommentInfo) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *CommentInfo) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CommentInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentInfo) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CommentInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type CommentFilterOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyUserId    *string `protobuf:"bytes,1,opt,name=onlyUserId,proto3,oneof" json:"onlyUserId,omitempty"`
	OnlyAtUserId  *string `protobuf:"bytes,2,opt,name=onlyAtUserId,proto3,oneof" json:"onlyAtUserId,omitempty"`
	OnlyCommentId *string `protobuf:"bytes,3,opt,name=onlyCommentId,proto3,oneof" json:"onlyCommentId,omitempty"`
	OnlySubjectId *string `protobuf:"bytes,4,opt,name=onlySubjectId,proto3,oneof" json:"onlySubjectId,omitempty"`
	OnlyRootId    *string `protobuf:"bytes,5,opt,name=onlyRootId,proto3,oneof" json:"onlyRootId,omitempty"`
	OnlyFatherId  *string `protobuf:"bytes,6,opt,name=onlyFatherId,proto3,oneof" json:"onlyFatherId,omitempty"`
	OnlyState     *int64  `protobuf:"varint,7,opt,name=onlyState,proto3,oneof" json:"onlyState,omitempty"`
	OnlyAttrs     *int64  `protobuf:"varint,8,opt,name=onlyAttrs,proto3,oneof" json:"onlyAttrs,omitempty"`
}

func (x *CommentFilterOptions) Reset() {
	*x = CommentFilterOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentFilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentFilterOptions) ProtoMessage() {}

func (x *CommentFilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentFilterOptions.ProtoReflect.Descriptor instead.
func (*CommentFilterOptions) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{4}
}

func (x *CommentFilterOptions) GetOnlyUserId() string {
	if x != nil && x.OnlyUserId != nil {
		return *x.OnlyUserId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlyAtUserId() string {
	if x != nil && x.OnlyAtUserId != nil {
		return *x.OnlyAtUserId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlyCommentId() string {
	if x != nil && x.OnlyCommentId != nil {
		return *x.OnlyCommentId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlySubjectId() string {
	if x != nil && x.OnlySubjectId != nil {
		return *x.OnlySubjectId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlyRootId() string {
	if x != nil && x.OnlyRootId != nil {
		return *x.OnlyRootId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlyFatherId() string {
	if x != nil && x.OnlyFatherId != nil {
		return *x.OnlyFatherId
	}
	return ""
}

func (x *CommentFilterOptions) GetOnlyState() int64 {
	if x != nil && x.OnlyState != nil {
		return *x.OnlyState
	}
	return 0
}

func (x *CommentFilterOptions) GetOnlyAttrs() int64 {
	if x != nil && x.OnlyAttrs != nil {
		return *x.OnlyAttrs
	}
	return 0
}

type Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TopCommentId string `protobuf:"bytes,3,opt,name=topCommentId,proto3" json:"topCommentId,omitempty"`
	RootCount    *int64 `protobuf:"varint,4,opt,name=rootCount,proto3,oneof" json:"rootCount,omitempty"`
	AllCount     *int64 `protobuf:"varint,5,opt,name=allCount,proto3,oneof" json:"allCount,omitempty"`
	State        int64  `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"` // 1: 正常, 2: 删除
	Attrs        int64  `protobuf:"varint,7,opt,name=attrs,proto3" json:"attrs,omitempty"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

func (x *Subject) Reset() {
	*x = Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{5}
}

func (x *Subject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subject) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Subject) GetTopCommentId() string {
	if x != nil {
		return x.TopCommentId
	}
	return ""
}

func (x *Subject) GetRootCount() int64 {
	if x != nil && x.RootCount != nil {
		return *x.RootCount
	}
	return 0
}

func (x *Subject) GetAllCount() int64 {
	if x != nil && x.AllCount != nil {
		return *x.AllCount
	}
	return 0
}

func (x *Subject) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Subject) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type SubjectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TopCommentId string `protobuf:"bytes,3,opt,name=TopCommentId,proto3" json:"TopCommentId,omitempty"`
	RootCount    int64  `protobuf:"varint,4,opt,name=rootCount,proto3" json:"rootCount,omitempty"`
	AllCount     int64  `protobuf:"varint,5,opt,name=allCount,proto3" json:"allCount,omitempty"`
	State        int64  `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"` // 1: 正常, 2: 删除
	Attrs        int64  `protobuf:"varint,7,opt,name=attrs,proto3" json:"attrs,omitempty"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

func (x *SubjectDetails) Reset() {
	*x = SubjectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDetails) ProtoMessage() {}

func (x *SubjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDetails.ProtoReflect.Descriptor instead.
func (*SubjectDetails) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{6}
}

func (x *SubjectDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubjectDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubjectDetails) GetTopCommentId() string {
	if x != nil {
		return x.TopCommentId
	}
	return ""
}

func (x *SubjectDetails) GetRootCount() int64 {
	if x != nil {
		return x.RootCount
	}
	return 0
}

func (x *SubjectDetails) GetAllCount() int64 {
	if x != nil {
		return x.AllCount
	}
	return 0
}

func (x *SubjectDetails) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SubjectDetails) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type SubjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Attrs  int64  `protobuf:"varint,3,opt,name=attrs,proto3" json:"attrs,omitempty"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

func (x *SubjectInfo) Reset() {
	*x = SubjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectInfo) ProtoMessage() {}

func (x *SubjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectInfo.ProtoReflect.Descriptor instead.
func (*SubjectInfo) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{7}
}

func (x *SubjectInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubjectInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubjectInfo) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_comment_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_platform_comment_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_platform_comment_common_proto_rawDescGZIP(), []int{8}
}

func (x *Label) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_platform_comment_common_proto protoreflect.FileDescriptor

var file_platform_comment_common_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x9b, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xc3, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xd2, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xce, 0x03, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c,
	0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x6f, 0x6e,
	0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x52, 0x6f, 0x6f,
	0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x6f, 0x6e, 0x6c,
	0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e,
	0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x6e, 0x6c,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x41, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x07, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc2, 0x01, 0x0a,
	0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54,
	0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x22, 0x4b, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x37,
	0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x5a, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x73,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x64, 0x10, 0x04, 0x2a, 0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x10, 0x02, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_comment_common_proto_rawDescOnce sync.Once
	file_platform_comment_common_proto_rawDescData = file_platform_comment_common_proto_rawDesc
)

func file_platform_comment_common_proto_rawDescGZIP() []byte {
	file_platform_comment_common_proto_rawDescOnce.Do(func() {
		file_platform_comment_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_comment_common_proto_rawDescData)
	})
	return file_platform_comment_common_proto_rawDescData
}

var file_platform_comment_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_platform_comment_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_platform_comment_common_proto_goTypes = []interface{}{
	(Attrs)(0),                   // 0: platform.comment.Attrs
	(State)(0),                   // 1: platform.comment.State
	(*Content)(nil),              // 2: platform.comment.Content
	(*IndexInfo)(nil),            // 3: platform.comment.IndexInfo
	(*Comment)(nil),              // 4: platform.comment.Comment
	(*CommentInfo)(nil),          // 5: platform.comment.CommentInfo
	(*CommentFilterOptions)(nil), // 6: platform.comment.CommentFilterOptions
	(*Subject)(nil),              // 7: platform.comment.Subject
	(*SubjectDetails)(nil),       // 8: platform.comment.SubjectDetails
	(*SubjectInfo)(nil),          // 9: platform.comment.SubjectInfo
	(*Label)(nil),                // 10: platform.comment.Label
}
var file_platform_comment_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_platform_comment_common_proto_init() }
func file_platform_comment_common_proto_init() {
	if File_platform_comment_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platform_comment_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentFilterOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_comment_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_platform_comment_common_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_platform_comment_common_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_platform_comment_common_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_comment_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_comment_common_proto_goTypes,
		DependencyIndexes: file_platform_comment_common_proto_depIdxs,
		EnumInfos:         file_platform_comment_common_proto_enumTypes,
		MessageInfos:      file_platform_comment_common_proto_msgTypes,
	}.Build()
	File_platform_comment_common_proto = out.File
	file_platform_comment_common_proto_rawDesc = nil
	file_platform_comment_common_proto_goTypes = nil
	file_platform_comment_common_proto_depIdxs = nil
}

var _ context.Context
